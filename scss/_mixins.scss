@mixin align-items($alignment){
  align-items: $alignment;
  -webkit-box-align: $alignment;
  -ms-flex-align: $alignment;
  -webkit-align-items: $alignment;
}

@mixin align-self($alignment){
  align-self: $alignment;
  -ms-flex-item-align: $alignment;
  -webkit-align-self: $alignment;
}

@mixin animation($animation...){
  -webkit-animation: $animation;
     -moz-animation: $animation;
       -o-animation: $animation;
          animation: $animation;
}

@mixin animation-duration($duration...){
  -webkit-animation-duration: $duration;
     -moz-animation-duration: $duration;
       -o-animation-duration: $duration;
          animation-duration: $duration;
}

@mixin animation-delay($delay...){
  -webkit-animation-delay: $delay;
     -moz-animation-delay: $delay;
       -o-animation-delay: $delay;
          animation-delay: $delay;
}

@mixin animation-name($name){
  -webkit-animation-name: $name;
     -moz-animation-name: $name;
       -o-animation-name: $name;
          animation-name: $name;
}

@mixin animation-fill-mode($mode){
  -webkit-animation-fill-mode: $mode;
     -moz-animation-fill-mode: $mode;
       -o-animation-fill-mode: $mode;
          animation-fill-mode: $mode;
}

@mixin appearance($value){
  -webkit-appearance: $value;
     -moz-appearance: $value;
          appearance: $value;
}

@mixin backface-visibility($string){
  -webkit-backface-visibility: hidden;
     -moz-backface-visibility: hidden;
      -ms-backface-visibility: hidden;
          backface-visibility: hidden;
}

@mixin background-clip($string){
  -webkit-background-clip: $string;
     -moz-background-clip: $string;
          background-clip: $string;
}

@mixin background-size($string){
  -webkit-background-size: $string;
     -moz-background-size: $string;
          background-size: $string;
}

@mixin box-shadow($string...){
  -webkit-box-shadow: $string;
     -moz-box-shadow: $string;
          box-shadow: $string;
}

@mixin box-sizing($type: border-box){
  -webkit-box-sizing: $type;
     -moz-box-sizing: $type;
          box-sizing: $type;
}

@mixin border-radius($radius: 2px){
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
          border-radius: $radius;

  -webkit-background-clip: padding-box;
     -moz-background-clip: padding;
          background-clip: padding-box;
}

@mixin border-radiuses($topright: 0, $bottomright: 0, $bottomleft: 0, $topleft: 0){
  -webkit-border-top-right-radius: $topright;
      -moz-border-radius-topright: $topright;
          border-top-right-radius: $topright;

  -webkit-border-bottom-right-radius: $bottomright;
      -moz-border-radius-bottomright: $bottomright;
          border-bottom-right-radius: $bottomright;

  -webkit-border-bottom-left-radius: $bottomleft;
      -moz-border-radius-bottomleft: $bottomleft;
          border-bottom-left-radius: $bottomleft;

  -webkit-border-top-left-radius: $topleft;
      -moz-border-radius-topleft: $topleft;
          border-top-left-radius: $topleft;

  -webkit-background-clip: padding-box;
     -moz-background-clip: padding;
          background-clip: padding-box;
}

@mixin box-direction($direction: normal){
  -webkit-box-direction: normal;
     -moz-box-direction: normal;
          box-direction: normal;
}

@mixin box-orient($orientation: horizontal){
  -webkit-box-orient: horizontal;
     -moz-box-orient: horizontal;
          box-orient: horizontal;
}

@mixin box-pack($position: center){
  -webkit-box-pack: center;
     -moz-box-pack: center;
}

@mixin flex-direction($direction: row){
  -webkit-flex-direction: row;
      -ms-flex-direction: row;
          flex-direction: row;
}

@mixin flex-wrap($wrap: nowrap){
  -webkit-flex-wrap: nowrap;
      -ms-flex-wrap: nowrap;
          flex-wrap: nowrap;
}

@mixin button-variant(
  $bg,
  $border,
  $color,

  $hoverBg,
  $hoverBorder,
  $hoverColor,

  $activeBg,
  $activeBorder,
  $activeColor,

  $disabledBackground: $btn-disabled-bg,
  $disabledBorder: $btn-disabled-border,
  $disabledColor: $btn-disabled-color
){
  background: $bg;
  border-bottom-width: 1px;
  border-color: $border;
  border-left-width: 1px;
  border-right-width: 1px;
  border-top-width: 1px;
  color: $color;
  @include opacity(1);

  &:focus {}

  &:active,
  &.active,
  .open .dropdown-toggle {
    background: $activeBg;
    border-color: $activeBorder;
    color: $activeColor;
    @include box-shadow(inset 0 1px 0 rgba(0, 0, 0, .05));
  }

  &:hover {
    background: $hoverBg;
    border-color: $hoverBorder;
    color: $hoverColor;
    @include opacity(1);
    @include transition(opacity 250ms, border 250ms, color 250ms);
  }

  &.active:hover {
    background: $activeBg;
    border-color: $activeBorder;
    color: $activeColor;
  }

  &.btn-disabled,
  &.disabled,
  &[disabled],
  fieldset[disabled] {
    background-color: $disabledBackground;
    border-color: $disabledBorder;
    color: $disabledColor;
    cursor: not-allowed;

    &:hover,
    &:focus,
    &:active,
    &.active {
      background-color: $disabledBackground;
      border-color: $disabledBorder;
      color: $disabledColor;
    }
  }
}

@mixin center-within-container(){
  @include align-items(center);
  @include display-flex();
  @include justify-content(center);
}

@mixin calc($property, $value) {
  #{$property}: -webkit-calc(#{$value});
  #{$property}: calc(#{$value});
}

@mixin clearfix(){
  &:before,
  &:after {
    content: " ";
    display: table;
  }

  &:after {
    clear: both;
  }
}

@mixin display-flex(){
  display: flex;
  display: -ms-flexbox;
  display: -webkit-flex;
}

@mixin drop-shadow($x: 0, $y: 1px, $blur: 2px, $spread: 0, $alpha: .25){
  -webkit-box-shadow: $x $y $blur $spread rgba(0, 0, 0, $alpha);
     -moz-box-shadow: $x $y $blur $spread rgba(0, 0, 0, $alpha);
          box-shadow: $x $y $blur $spread rgba(0, 0, 0, $alpha);
}

@mixin filter-gradient($start-color, $end-color, $orientation: vertical){
  $gradient-type: if($orientation == vertical, 0, 1);
  filter: progid:DXImageTransform.Microsoft.gradient(gradientType=#{$gradient-type}, startColorstr='#{ie-hex-str($start-color)}', endColorstr='#{ie-hex-str($end-color)}');
}

@mixin flex($value){
  -webkit-box-flex: $value;
  -webkit-flex: $value;
      -ms-flex: $value;
          flex: $value;
}

@mixin flex-flow($value){
  -webkit-flex-flow: $value;
      -ms-flex-flow: $value;
          flex-flow: $value;
}

@mixin headings($from: 1, $to: 6){
  @for $i from $from through $to{
    h#{$i}{
      @content;
    }
  }
}

@mixin inline-block($align: middle){
  display: inline-block;
  *display: inline;
  vertical-align: $align;
  zoom: 1;
}

@mixin inner-shadow($x: 0, $y: 1px, $blur: 2px, $spread: 0, $alpha: .25){
  -webkit-box-shadow: inset $x $y $blur $spread rgba(0, 0, 0, $alpha);
     -moz-box-shadow: inset $x $y $blur $spread rgba(0, 0, 0, $alpha);
          box-shadow: inset $x $y $blur $spread rgba(0, 0, 0, $alpha);
}

@mixin gradient($startColor: #eee, $endColor: #fff){
  background-color: $startColor;
  background-image: -webkit-gradient(linear, left top, left bottom, color-stop(0%, $startColor), color-stop(100%, $endColor));
  background-image: -webkit-linear-gradient(top, $startColor 0%, $endColor 100%);
  background-image:    -moz-linear-gradient(top, $startColor 0%, $endColor 100%);
  background:           -ms-linear-gradient(top, $startColor 0%, $endColor 100%);
  background-image:      -o-linear-gradient(top, $startColor 0%, $endColor 100%);
  background:               linear-gradient(top, $startColor 0%, $endColor 100%);
}

@mixin horizontal-gradient($startColor: #eee, $endColor: #fff){
  background-color: $startColor;
  background-image: -webkit-gradient(linear, left top, right top, color-stop(0%, $startColor), color-stop(100%, $endColor));
  background-image: -webkit-linear-gradient(left, $startColor 0%, $endColor 100%);
  background-image:    -moz-linear-gradient(left, $startColor 0%, $endColor 100%);
  background:           -ms-linear-gradient(left, $startColor 0%, $endColor 100%);
  background-image:      -o-linear-gradient(left, $startColor 0%, $endColor 100%);
  background:               linear-gradient(left, $startColor 0%, $endColor 100%);
}

@mixin diagonal-gradient($startColor: #eee, $endColor: #fff){
  background-color: $startColor;
  background: -webkit-gradient(linear, left bottom, right top, color-stop(0%, $startColor), color-stop(100%, $endColor));
  background-image: -webkit-linear-gradient(top right, $startColor 0%, $endColor 100%);
  background-image:    -moz-linear-gradient(top right, $startColor 0%, $endColor 100%);
  background:           -ms-linear-gradient(top right, $startColor 0%, $endColor 100%);
  background-image:      -o-linear-gradient(top right, $startColor 0%, $endColor 100%);
  background:               linear-gradient(top right, $startColor 0%, $endColor 100%);
}

@mixin justify-content($alignment){
  justify-content: $alignment;
  -ms-flex-pack: $alignment;
  -webkit-box-pack: $alignment;
  -webkit-justify-content: $alignment;
}

@mixin keyframes($animation){
  @-webkit-keyframes #{$animation} {
    @content;
  }

  @-moz-keyframes #{$animation} {
    @content;
  }

  @-o-keyframes #{$animation} {
    @content;
  }

  @keyframes #{$animation} {
    @content;
  }
}

@mixin opacity($opacity){
  $opacity-ie: $opacity * 100;
  opacity: $opacity;
  filter: alpha(opacity=$opacity-ie);
}

@mixin perspective($value: 1000){
  -webkit-perspective: $value;
     -moz-perspective: $value;
      -ms-perspective: $value;
          perspective: $value;
}

.pointer {
  cursor: pointer;
}

@mixin rotate($deg){
  -webkit-transform: rotate($deg);
     -moz-transform: rotate($deg);
      -ms-transform: rotate($deg);
       -o-transform: rotate($deg);
          transform: rotate($deg);
}

@mixin scale($factor){
  -webkit-transform: scale($factor);
     -moz-transform: scale($factor);
      -ms-transform: scale($factor);
       -o-transform: scale($factor);
          transform: scale($factor);
}

@mixin skew($deg, $deg2){
  -webkit-transform: skew($deg, $deg2);
     -moz-transform: skew($deg, $deg2);
      -ms-transform: skew($deg, $deg2);
       -o-transform: skew($deg, $deg2);
          transform: skew($deg, $deg2);
}

@mixin text-shadow($string: 0 1px 3px rgba(0, 0, 0, .25)){
  text-shadow: $string;
}

@mixin transform($string...){
  -webkit-transform: $string;
     -moz-transform: $string;
      -ms-transform: $string;
       -o-transform: $string;
          transform: $string;
}

@mixin transform-origin($string...){
  -webkit-transform-origin: $string;
     -moz-transform-origin: $string;
      -ms-transform-origin: $string;
       -o-transform-origin: $string;
          transform-origin: $string;
}

@mixin transition($string...){
  -webkit-transition: $string;
     -moz-transition: $string;
      -ms-transition: $string;
       -o-transition: $string;
          transition: $string;
}

@mixin transition-delay($string...){
  -webkit-transition-delay: $string;
     -moz-transition-delay: $string;
      -ms-transition-delay: $string;
       -o-transition-delay: $string;
          transition-delay: $string;
}

@mixin transition-property($string...){
  -webkit-transition-property: $string;
     -moz-transition-property: $string;
      -ms-transition-property: $string;
       -o-transition-property: $string;
          transition-property: $string;
}

@mixin transition-duration($string...){
  -webkit-transition-duration: $string;
     -moz-transition-duration: $string;
      -ms-transition-duration: $string;
       -o-transition-duration: $string;
          transition-duration: $string;
}

@mixin transition-timing-function($string...){
    -webkit-transition-timing-function: $string;
       -moz-transition-timing-function: $string;
         -o-transition-timing-function: $string;
            transition-timing-function: $string;
}

@mixin translate($x, $y:0){
  -webkit-transform: translate($x, $y);
     -moz-transform: translate($x, $y);
      -ms-transform: translate($x, $y);
       -o-transform: translate($x, $y);
          transform: translate($x, $y);
}

@mixin translate3d($x, $y: 0, $z: 0){
  -webkit-transform: translate3d($x, $y, $z);
     -moz-transform: translate3d($x, $y, $z);
      -ms-transform: translate3d($x, $y, $z);
       -o-transform: translate3d($x, $y, $z);
          transform: translate3d($x, $y, $z);
}

@mixin user-select($string: none){
  -webkit-touch-callout: $string;
    -webkit-user-select: $string;
     -khtml-user-select: $string;
       -moz-user-select: $string;
        -ms-user-select: $string;
            user-select: $string;
}

